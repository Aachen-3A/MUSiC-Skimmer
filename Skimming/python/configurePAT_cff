# change default jet collection to AK5 and that for Type1 MET corrections, too
import PhysicsTools.PatAlgos.tools.jetTools
PhysicsTools.PatAlgos.tools.jetTools.switchJetCollection(process, 
	cms.InputTag('antikt5CaloJets'),  # Jet collection; must be already in the event when patDefaultSequence is executed
	doJTA=True,            # Run Jet-Track association & JetCharge
	doBTagging=True,       # Run b-tagging
	jetCorrLabel=('AK5','Calo'), # example jet correction name; set to None for no JEC
	doType1MET=True,       # recompute Type1 MET using these jets
	genJetCollection=cms.InputTag("antikt5GenJets"))


process.allLayer1Photons.addPhotonID = True
del process.allLayer1Photons.photonIDSource
process.allLayer1Photons.photonIDSources = cms.PSet(
	PhotonCutBasedIDLoose = cms.InputTag('PhotonIDProd', 'PhotonCutBasedIDLoose'),
	PhotonCutBasedIDTight = cms.InputTag('PhotonIDProd', 'PhotonCutBasedIDTight')
	)

#configure PAT matching
process.electronMatch.checkCharge = cms.bool(False)
process.electronMatch.resolveByMatchQuality = cms.bool(True)
process.electronMatch.maxDeltaR = cms.double(0.2)
process.electronMatch.maxDPtRel = cms.double(1000000.0)

process.muonMatch.checkCharge = cms.bool(False)
process.muonMatch.resolveByMatchQuality = cms.bool(True)
process.muonMatch.maxDeltaR = cms.double(0.2)
process.muonMatch.maxDPtRel = cms.double(1000000.0)

process.photonMatch.checkCharge = cms.bool(False)
process.photonMatch.resolveByMatchQuality = cms.bool(True)
process.photonMatch.maxDeltaR = cms.double(0.2)
process.photonMatch.maxDPtRel = cms.double(1000000.0)

process.jetPartonMatch.checkCharge = cms.bool(False)
process.jetPartonMatch.resolveByMatchQuality = cms.bool(True)
process.jetPartonMatch.maxDeltaR = cms.double(0.4)
process.jetPartonMatch.maxDPtRel = cms.double(1000000.0)

process.jetGenJetMatch.checkCharge = cms.bool(False)
process.jetGenJetMatch.resolveByMatchQuality = cms.bool(True)
process.jetGenJetMatch.maxDeltaR = cms.double(0.4)
process.jetGenJetMatch.maxDPtRel = cms.double(1000000.0)
